{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/hooks-01-starting-project/src/components/Ingredients/Ingredients.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useCallback, useMemo } from \"react\";\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\nimport useHttp from \"../hooks/http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n    case \"ADD\":\n      return [...currentIngredients, action.ingredient];\n    case \"DELETE\":\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n};\nconst Ingredients = () => {\n  _s();\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest\n  } = useHttp();\n\n  // const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log(\"RENDERING INGREDIENTS\", userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({\n      type: \"SET\",\n      ingredients: filteredIngredients\n    });\n  }, []);\n  const addIngredientHandler = useCallback(ingredient => {\n    // dispatchHttp({ type: \"SEND\" });\n    // fetch(\n    //   \"https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients.json\",\n    //   {\n    //     method: \"POST\",\n    //     body: JSON.stringify(ingredient),\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //   }\n    // )\n    //   .then((response) => {\n    //     dispatchHttp({ type: \"RESPONSE\" });\n    //     return response.json();\n    //   })\n    //   .then((responseData) => {\n    //     // setUserIngredients(prevIngredients => [\n    //     //   ...prevIngredients,\n    //     //   { id: responseData.name, ...ingredient }\n    //     // ]);\n    //     dispatch({\n    //       type: \"ADD\",\n    //       ingredient: { id: responseData.name, ...ingredient },\n    //     });\n    //   });\n  }, []);\n  const removeIngredientHandler = useCallback(ingredientId => {\n    sendRequest(`https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`, \"DELETE\");\n  }, [sendRequest]);\n  const clearError = useCallback(() => {\n    // dispatchHttp({ type: \"CLEAR\" });\n  }, []);\n  const ingredientList = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(IngredientList, {\n      ingredients: userIngredients,\n      onRemoveItem: removeIngredientHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }, [userIngredients, removeIngredientHandler]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      onClose: clearError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IngredientForm, {\n      onAddIngredient: addIngredientHandler,\n      loading: isloading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onLoadIngredients: filteredIngredientsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), ingredientList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Ingredients, \"VQ294FKO7/fihmMl3j8Y5qRifNM=\", false, function () {\n  return [useHttp];\n});\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["React","useReducer","useEffect","useCallback","useMemo","IngredientForm","IngredientList","ErrorModal","Search","useHttp","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","error","data","sendRequest","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","removeIngredientHandler","ingredientId","clearError","ingredientList","isloading"],"sources":["/Users/mac/Documents/hooks-01-starting-project/src/components/Ingredients/Ingredients.js"],"sourcesContent":["import React, { useReducer, useEffect, useCallback, useMemo } from \"react\";\n\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\nimport useHttp from \"../hooks/http\";\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n    case \"ADD\":\n      return [...currentIngredients, action.ingredient];\n    case \"DELETE\":\n      return currentIngredients.filter((ing) => ing.id !== action.id);\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const { isLoading, error, data, sendRequest } = useHttp();\n\n  // const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log(\"RENDERING INGREDIENTS\", userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback((filteredIngredients) => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({ type: \"SET\", ingredients: filteredIngredients });\n  }, []);\n\n  const addIngredientHandler = useCallback((ingredient) => {\n    // dispatchHttp({ type: \"SEND\" });\n    // fetch(\n    //   \"https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients.json\",\n    //   {\n    //     method: \"POST\",\n    //     body: JSON.stringify(ingredient),\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //   }\n    // )\n    //   .then((response) => {\n    //     dispatchHttp({ type: \"RESPONSE\" });\n    //     return response.json();\n    //   })\n    //   .then((responseData) => {\n    //     // setUserIngredients(prevIngredients => [\n    //     //   ...prevIngredients,\n    //     //   { id: responseData.name, ...ingredient }\n    //     // ]);\n    //     dispatch({\n    //       type: \"ADD\",\n    //       ingredient: { id: responseData.name, ...ingredient },\n    //     });\n    //   });\n  }, []);\n\n  const removeIngredientHandler = useCallback(\n    (ingredientId) => {\n      sendRequest(\n        `https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n        \"DELETE\"\n      );\n    },\n    [sendRequest]\n  );\n\n  const clearError = useCallback(() => {\n    // dispatchHttp({ type: \"CLEAR\" });\n  }, []);\n\n  const ingredientList = useMemo(() => {\n    return (\n      <IngredientList\n        ingredients={userIngredients}\n        onRemoveItem={removeIngredientHandler}\n      />\n    );\n  }, [userIngredients, removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isloading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}