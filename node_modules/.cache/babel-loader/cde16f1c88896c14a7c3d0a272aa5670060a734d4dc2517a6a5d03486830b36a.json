{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/hooks-01-starting-project/src/components/Ingredients/Ingredients.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useCallback, useMemo } from \"react\";\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n    case \"ADD\":\n      return [...currentIngredients, action.ingredient];\n    case \"DELETE\":\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n};\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        loading: true,\n        error: null\n      };\n    case \"RESPONSE\":\n      return {\n        ...curHttpState,\n        loading: false\n      };\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.errorMessage\n      };\n    case \"CLEAR\":\n      return {\n        ...curHttpState,\n        error: null\n      };\n    default:\n      throw new Error(\"Should not be reached!\");\n  }\n};\nconst Ingredients = () => {\n  _s();\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [httpState, dispatchHttp] = useReducer(httpReducer, {\n    loading: false,\n    error: null\n  });\n  // const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log(\"RENDERING INGREDIENTS\", userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({\n      type: \"SET\",\n      ingredients: filteredIngredients\n    });\n  }, []);\n  const addIngredientHandler = useCallback(ingredient => {\n    dispatchHttp({\n      type: \"SEND\"\n    });\n    fetch(\"https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients.json\", {\n      method: \"POST\",\n      body: JSON.stringify(ingredient),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      dispatchHttp({\n        type: \"RESPONSE\"\n      });\n      return response.json();\n    }).then(responseData => {\n      // setUserIngredients(prevIngredients => [\n      //   ...prevIngredients,\n      //   { id: responseData.name, ...ingredient }\n      // ]);\n      dispatch({\n        type: \"ADD\",\n        ingredient: {\n          id: responseData.name,\n          ...ingredient\n        }\n      });\n    });\n  }, []);\n  const removeIngredientHandler = useCallback(ingredientId => {\n    dispatchHttp({\n      type: \"SEND\"\n    });\n    fetch(`https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: \"DELETE\"\n    }).then(response => {\n      dispatchHttp({\n        type: \"RESPONSE\"\n      });\n      // setUserIngredients(prevIngredients =>\n      //   prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      // );\n      dispatch({\n        type: \"DELETE\",\n        id: ingredientId\n      });\n    }).catch(error => {\n      dispatchHttp({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong!\"\n      });\n    });\n  }, []);\n  const clearError = useCallback(() => {\n    dispatchHttp({\n      type: \"CLEAR\"\n    });\n  }, []);\n  const ingredientList = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(IngredientList, {\n      ingredients: userIngredients,\n      onRemoveItem: removeIngredientHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }, [userIngredients, removeIngredientHandler]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [httpState.error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      onClose: clearError,\n      children: httpState.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IngredientForm, {\n      onAddIngredient: addIngredientHandler,\n      loading: httpState.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onLoadIngredients: filteredIngredientsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), ingredientList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Ingredients, \"wSEUnDV9ftwKoBhxmrab6xWRb8w=\");\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["React","useReducer","useEffect","useCallback","useMemo","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Error","httpReducer","curHttpState","loading","error","errorMessage","Ingredients","userIngredients","dispatch","httpState","dispatchHttp","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","name","removeIngredientHandler","ingredientId","catch","clearError","ingredientList"],"sources":["/Users/mac/Documents/hooks-01-starting-project/src/components/Ingredients/Ingredients.js"],"sourcesContent":["import React, { useReducer, useEffect, useCallback, useMemo } from \"react\";\n\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Search from \"./Search\";\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.ingredients;\n    case \"ADD\":\n      return [...currentIngredients, action.ingredient];\n    case \"DELETE\":\n      return currentIngredients.filter((ing) => ing.id !== action.id);\n    default:\n      throw new Error(\"Should not get there!\");\n  }\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return { loading: true, error: null };\n    case \"RESPONSE\":\n      return { ...curHttpState, loading: false };\n    case \"ERROR\":\n      return { loading: false, error: action.errorMessage };\n    case \"CLEAR\":\n      return { ...curHttpState, error: null };\n    default:\n      throw new Error(\"Should not be reached!\");\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [httpState, dispatchHttp] = useReducer(httpReducer, {\n    loading: false,\n    error: null,\n  });\n  // const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log(\"RENDERING INGREDIENTS\", userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback((filteredIngredients) => {\n    // setUserIngredients(filteredIngredients);\n    dispatch({ type: \"SET\", ingredients: filteredIngredients });\n  }, []);\n\n  const addIngredientHandler = useCallback((ingredient) => {\n    dispatchHttp({ type: \"SEND\" });\n    fetch(\n      \"https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(ingredient),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((response) => {\n        dispatchHttp({ type: \"RESPONSE\" });\n        return response.json();\n      })\n      .then((responseData) => {\n        // setUserIngredients(prevIngredients => [\n        //   ...prevIngredients,\n        //   { id: responseData.name, ...ingredient }\n        // ]);\n        dispatch({\n          type: \"ADD\",\n          ingredient: { id: responseData.name, ...ingredient },\n        });\n      });\n  }, []);\n\n  const removeIngredientHandler = useCallback((ingredientId) => {\n    dispatchHttp({ type: \"SEND\" });\n    fetch(\n      `https://react-hooks-update-537a0-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n      {\n        method: \"DELETE\",\n      }\n    )\n      .then((response) => {\n        dispatchHttp({ type: \"RESPONSE\" });\n        // setUserIngredients(prevIngredients =>\n        //   prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n        // );\n        dispatch({ type: \"DELETE\", id: ingredientId });\n      })\n      .catch((error) => {\n        dispatchHttp({ type: \"ERROR\", errorMessage: \"Something went wrong!\" });\n      });\n  }, []);\n\n  const clearError = useCallback(() => {\n    dispatchHttp({ type: \"CLEAR\" });\n  }, []);\n\n  const ingredientList = useMemo(() => {\n    return (\n      <IngredientList\n        ingredients={userIngredients}\n        onRemoveItem={removeIngredientHandler}\n      />\n    );\n  }, [userIngredients, removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n      {httpState.error && (\n        <ErrorModal onClose={clearError}>{httpState.error}</ErrorModal>\n      )}\n\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={httpState.loading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}